<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  {% include 'breadcrumb' %}

  <div class="grid product-single">
    <div class="grid__item large--one-half text-center">


      <div class="product-single__photos" id="ProductPhoto">

        {% if product.compare_at_price_max > product.price %}
          <div class="sale">Sale</div>
        {% endif %}

        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}

        {% for image in product.images %}
					<img src="{{ image.src | product_img_url: 'grande' }}" alt="{{ image.alt | escape }}" id="ProductPhotoImg" data-zoom-image="{{ image.src | product_img_url: 'master' }}" />
				{% endfor %}
      </div>

      {% comment %}
        Create thumbnails if we have more than one product image
      {% endcomment %}
      {% if product.images.size > 1 %}
        <ul class="product-single__thumbnails grid-uniform" id="ProductThumbs">

          {% for image in product.images %}
            <li class="grid__item one-quarter">
              <a href="{{ image.src | img_url: 'grande' }}" class="product-single__thumbnail">
                <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
              </a>
            </li>
          {% endfor %}

        </ul>
      {% endif %}
    </div>

    <div class="grid__item large--one-half">

      <h1 itemprop="name">{{ product.title }}</h1>

      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
          ID addToCartForm is a selector for the ajax cart plugin
        {% endcomment %}
        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

          {% assign view_only = false %}

          {% for collection in product.collections %}
            {% if collection.title == "View Only" %}
              {% assign view_only = true %}
            {% endif %}
          {% endfor %}

          {% if view_only == false %}

              <span id="ProductPrice" class="h4" itemprop="price">
                {{ current_variant.price | money }}
              </span>

              {% if product.compare_at_price_max > product.price %}
                <span id="ComparePrice" class="h4">

                </span>
              {% endif %}

              {% comment %}
                Add product variants as a dropdown.
                  - By default, each variant (or combination of variants) will display as its own <option>
                  - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

                You can leverage jQuery to add a callback on page load and each time the select element changes:
                  - Include option_selection.js (as seen at the bottom of this file)
                  - This allows you to use JavaScript anytime the variant dropdown changes
                  - This also separates out your variant options (ie. size, color, etc.) to separate select elements

                For more information on products with multiple options, visit:
                  - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
              {% endcomment %}
              <select name="id" id="productSelect" class="product-single__variants">
                {% for variant in product.variants %}
                  {% if variant.available %}

                    {% comment %}
                      Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                    {% endcomment %}
                    <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

                  {% else %}
                    <option disabled="disabled">
                      {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                    </option>

                  {% endif %}
                {% endfor %}
              </select>

              <p><a href="//cdn.shopify.com/s/files/1/0867/4198/files/size-chart_2048x2048.jpg" rel="prettyPhoto" id="size-trigger">Size Chart</a></p>

              <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
              <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">

              <button type="submit" name="add" id="AddToCart" class="btn">
                <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
              </button>

              <br/>

              <div id="variant-inventory">

              </div>

          {% endif %}


        </form>

      </div>



      <div class="twist">
        <img src="//cdn.shopify.com/s/files/1/0867/4198/files/divider_line_2048x2048.png?591567867057404343" />
      </div>

      <div class="product-description rte" itemprop="description">
        {{ product.description }}

        <p>Not sure about your size? <a href="https://mail.google.com/mail/?view=cm&amp;fs=1&amp;tf=1&amp;to=sales@ugapparel.com" target="_blank">Contact us!</a> We'll tell you what we really think!</p>

        <h3>Share this product now!</h3>

        <ul class="inline-list social-icons">
          {% if settings.social_facebook_link != blank %}
            <li>
              <a class="icon-fallback-text" href="https://www.facebook.com/sharer/sharer.php?u={{ product.url }}" title="{{ shop.name }} on Facebook" target="_blank">
                <span class="icon icon-facebook" aria-hidden="true"></span>
                <span class="fallback-text">Facebook</span>
              </a>
            </li>
          {% endif %}
          {% if settings.social_twitter_link != blank %}
            <li>
              <a class="icon-fallback-text" href="https://twitter.com/home?status=Check%20out%20this%20{{ product.title }}%20from%20%40ugapparel:%20http://ugapparel.com{{ product.url }}" title="{{ shop.name }} on Twitter" target="_blank">
                <span class="icon icon-twitter" aria-hidden="true"></span>
                <span class="fallback-text">Twitter</span>
              </a>
            </li>
          {% endif %}
            <li>
              <a class="icon-fallback-text" href="https://pinterest.com/pin/create/button/?url=http://ugapparel.com{{ product.url }}&media=http:{{ product.featured_image.src | img_url: 'large' }}" title="{{ shop.name }} on Pinterest" target="_blank">
                <span class="icon icon-pinterest" aria-hidden="true"></span>
                <span class="fallback-text">Pinterest</span>
              </a>
            </li>
        </ul>

      </div>

      {% comment %}
        If the user is on a collection product page (ie with /collections/collection-handle/products/product-handle)
        in the URL, we can show next/previous links to other products in the collection.

            {% if collection %}
              {% if collection.previous_product or collection.next_product %}
                <p>

                {% if collection.previous_product %}
                  {% capture prev_url %}{{ collection.previous_product}}#content{% endcapture %}
                  <span class="left">
                    {{ 'products.general.previous_product_html' | t | link_to: prev_url }}
                  </span>
                {% endif %}

                {% if collection.next_product %}
                  {% capture next_url %}{{ collection.next_product}}#content{% endcapture %}
                  <span class="right">
                    {{ 'products.general.next_product_html' | t | link_to: next_url }}
                  </span>
                {% endif %}

                </p>
              {% endif %}
            {% endif %}

      {% endcomment %}

    </div>
  </div>

</div>



{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });

    if (variant) {
      if (variant.inventory_management == "shopify" && variant.inventory_policy != "continue") {
        if (variant.inventory_quantity > 0 && variant.inventory_quantity < 11) {
          jQuery('#variant-inventory').text('We have ' + variant.inventory_quantity + ' in stock.');
        }
        else if (variant.inventory_quantity == 0) {
          jQuery('#variant-inventory').text("This product is sold out");
        }

      }
    }
    else {
        jQuery('#variant-inventory').text("");
    }

  };

  $(document).ready(function() {
    $('#size-trigger').magnificPopup({type:'image'});
  });



  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });

  $('.product-single__photos img:eq(0)').elevateZoom({
  		zoomType: "inner",
  		cursor: "crosshair",
  		zoomWindowFadeIn: 500,
  		zoomWindowFadeOut: 750
  	});

  	//"Can you Just"
  	$('.product-single__photos img:eq(0)').addClass('active');

  	$('.product-single__thumbnails li').click(function(){

  		$index = $(this).index();



  		$('.product-single__photos img').removeClass('active');
      $('.product-single__photos img:eq('+$index+')').addClass('active');

      $('.product-single__photos img:eq('+$index+')').elevateZoom({
        zoomType: "inner",
        cursor: "crosshair",
        zoomWindowFadeIn: 500,
        zoomWindowFadeOut: 750
      });

  	});
</script>
